// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.13.0
// source: oidb0x89a.proto

package oidb

import (
	proto "github.com/golang/protobuf/proto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type A89GroupNewGuidelinesInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BoolEnabled   bool   `protobuf:"varint,1,opt,name=bool_enabled,json=boolEnabled,proto3" json:"bool_enabled,omitempty"`
	StringContent []byte `protobuf:"bytes,2,opt,name=string_content,json=stringContent,proto3" json:"string_content,omitempty"`
}

func (x *A89GroupNewGuidelinesInfo) Reset() {
	*x = A89GroupNewGuidelinesInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oidb0x89a_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *A89GroupNewGuidelinesInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*A89GroupNewGuidelinesInfo) ProtoMessage() {}

func (x *A89GroupNewGuidelinesInfo) ProtoReflect() protoreflect.Message {
	mi := &file_oidb0x89a_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use A89GroupNewGuidelinesInfo.ProtoReflect.Descriptor instead.
func (*A89GroupNewGuidelinesInfo) Descriptor() ([]byte, []int) {
	return file_oidb0x89a_proto_rawDescGZIP(), []int{0}
}

func (x *A89GroupNewGuidelinesInfo) GetBoolEnabled() bool {
	if x != nil {
		return x.BoolEnabled
	}
	return false
}

func (x *A89GroupNewGuidelinesInfo) GetStringContent() []byte {
	if x != nil {
		return x.StringContent
	}
	return nil
}

type A89GroupGeoInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uint32CityId     uint32 `protobuf:"varint,1,opt,name=uint32_city_id,json=uint32CityId,proto3" json:"uint32_city_id,omitempty"`
	Uint64Longtitude uint64 `protobuf:"varint,2,opt,name=uint64_longtitude,json=uint64Longtitude,proto3" json:"uint64_longtitude,omitempty"`
	Uint64Latitude   uint64 `protobuf:"varint,3,opt,name=uint64_latitude,json=uint64Latitude,proto3" json:"uint64_latitude,omitempty"`
	StringGeoContent []byte `protobuf:"bytes,4,opt,name=string_geo_content,json=stringGeoContent,proto3" json:"string_geo_content,omitempty"`
	Uint64PoiId      uint64 `protobuf:"varint,5,opt,name=uint64_poi_id,json=uint64PoiId,proto3" json:"uint64_poi_id,omitempty"`
}

func (x *A89GroupGeoInfo) Reset() {
	*x = A89GroupGeoInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oidb0x89a_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *A89GroupGeoInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*A89GroupGeoInfo) ProtoMessage() {}

func (x *A89GroupGeoInfo) ProtoReflect() protoreflect.Message {
	mi := &file_oidb0x89a_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use A89GroupGeoInfo.ProtoReflect.Descriptor instead.
func (*A89GroupGeoInfo) Descriptor() ([]byte, []int) {
	return file_oidb0x89a_proto_rawDescGZIP(), []int{1}
}

func (x *A89GroupGeoInfo) GetUint32CityId() uint32 {
	if x != nil {
		return x.Uint32CityId
	}
	return 0
}

func (x *A89GroupGeoInfo) GetUint64Longtitude() uint64 {
	if x != nil {
		return x.Uint64Longtitude
	}
	return 0
}

func (x *A89GroupGeoInfo) GetUint64Latitude() uint64 {
	if x != nil {
		return x.Uint64Latitude
	}
	return 0
}

func (x *A89GroupGeoInfo) GetStringGeoContent() []byte {
	if x != nil {
		return x.StringGeoContent
	}
	return nil
}

func (x *A89GroupGeoInfo) GetUint64PoiId() uint64 {
	if x != nil {
		return x.Uint64PoiId
	}
	return 0
}

type A89GroupExInfoOnly struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uint32TribeId          uint32 `protobuf:"varint,1,opt,name=uint32_tribe_id,json=uint32TribeId,proto3" json:"uint32_tribe_id,omitempty"`
	Uint32MoneyForAddGroup uint32 `protobuf:"varint,2,opt,name=uint32_money_for_add_group,json=uint32MoneyForAddGroup,proto3" json:"uint32_money_for_add_group,omitempty"`
}

func (x *A89GroupExInfoOnly) Reset() {
	*x = A89GroupExInfoOnly{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oidb0x89a_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *A89GroupExInfoOnly) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*A89GroupExInfoOnly) ProtoMessage() {}

func (x *A89GroupExInfoOnly) ProtoReflect() protoreflect.Message {
	mi := &file_oidb0x89a_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use A89GroupExInfoOnly.ProtoReflect.Descriptor instead.
func (*A89GroupExInfoOnly) Descriptor() ([]byte, []int) {
	return file_oidb0x89a_proto_rawDescGZIP(), []int{2}
}

func (x *A89GroupExInfoOnly) GetUint32TribeId() uint32 {
	if x != nil {
		return x.Uint32TribeId
	}
	return 0
}

func (x *A89GroupExInfoOnly) GetUint32MoneyForAddGroup() uint32 {
	if x != nil {
		return x.Uint32MoneyForAddGroup
	}
	return 0
}

type A89Groupinfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uint32GroupExtAdmNum       uint32                     `protobuf:"varint,1,opt,name=uint32_group_ext_adm_num,json=uint32GroupExtAdmNum,proto3" json:"uint32_group_ext_adm_num,omitempty"`
	Uint32Flag                 uint32                     `protobuf:"varint,2,opt,name=uint32_flag,json=uint32Flag,proto3" json:"uint32_flag,omitempty"`
	StringGroupName            []byte                     `protobuf:"bytes,3,opt,name=string_group_name,json=stringGroupName,proto3" json:"string_group_name,omitempty"`
	StringGroupMemo            []byte                     `protobuf:"bytes,4,opt,name=string_group_memo,json=stringGroupMemo,proto3" json:"string_group_memo,omitempty"`
	StringGroupFingerMemo      []byte                     `protobuf:"bytes,5,opt,name=string_group_finger_memo,json=stringGroupFingerMemo,proto3" json:"string_group_finger_memo,omitempty"`
	StringGroupAioSkinUrl      []byte                     `protobuf:"bytes,6,opt,name=string_group_aio_skin_url,json=stringGroupAioSkinUrl,proto3" json:"string_group_aio_skin_url,omitempty"`
	StringGroupBoardSkinUrl    []byte                     `protobuf:"bytes,7,opt,name=string_group_board_skin_url,json=stringGroupBoardSkinUrl,proto3" json:"string_group_board_skin_url,omitempty"`
	StringGroupCoverSkinUrl    []byte                     `protobuf:"bytes,8,opt,name=string_group_cover_skin_url,json=stringGroupCoverSkinUrl,proto3" json:"string_group_cover_skin_url,omitempty"`
	Uint32GroupGrade           uint32                     `protobuf:"varint,9,opt,name=uint32_group_grade,json=uint32GroupGrade,proto3" json:"uint32_group_grade,omitempty"`
	Uint32ActiveMemberNum      uint32                     `protobuf:"varint,10,opt,name=uint32_active_member_num,json=uint32ActiveMemberNum,proto3" json:"uint32_active_member_num,omitempty"`
	Uint32CertificationType    uint32                     `protobuf:"varint,11,opt,name=uint32_certification_type,json=uint32CertificationType,proto3" json:"uint32_certification_type,omitempty"`
	StringCertificationText    []byte                     `protobuf:"bytes,12,opt,name=string_certification_text,json=stringCertificationText,proto3" json:"string_certification_text,omitempty"`
	StringGroupRichFingerMemo  []byte                     `protobuf:"bytes,13,opt,name=string_group_rich_finger_memo,json=stringGroupRichFingerMemo,proto3" json:"string_group_rich_finger_memo,omitempty"`
	StGroupNewguidelines       *A89GroupNewGuidelinesInfo `protobuf:"bytes,14,opt,name=st_group_newguidelines,json=stGroupNewguidelines,proto3" json:"st_group_newguidelines,omitempty"`
	Uint32GroupFace            uint32                     `protobuf:"varint,15,opt,name=uint32_group_face,json=uint32GroupFace,proto3" json:"uint32_group_face,omitempty"`
	Uint32AddOption            uint32                     `protobuf:"varint,16,opt,name=uint32_add_option,json=uint32AddOption,proto3" json:"uint32_add_option,omitempty"`
	Uint32ShutupTime           uint32                     `protobuf:"varint,17,opt,name=uint32_shutup_time,json=uint32ShutupTime,proto3" json:"uint32_shutup_time,omitempty"`
	Uint32GroupTypeFlag        uint32                     `protobuf:"varint,18,opt,name=uint32_group_type_flag,json=uint32GroupTypeFlag,proto3" json:"uint32_group_type_flag,omitempty"`
	RptStringGroupTag          [][]byte                   `protobuf:"bytes,19,rep,name=rpt_string_group_tag,json=rptStringGroupTag,proto3" json:"rpt_string_group_tag,omitempty"`
	MsgGroupGeoInfo            *A89GroupGeoInfo           `protobuf:"bytes,20,opt,name=msg_group_geo_info,json=msgGroupGeoInfo,proto3" json:"msg_group_geo_info,omitempty"`
	Uint32GroupClassExt        uint32                     `protobuf:"varint,21,opt,name=uint32_group_class_ext,json=uint32GroupClassExt,proto3" json:"uint32_group_class_ext,omitempty"`
	StringGroupClassText       []byte                     `protobuf:"bytes,22,opt,name=string_group_class_text,json=stringGroupClassText,proto3" json:"string_group_class_text,omitempty"`
	Uint32AppPrivilegeFlag     uint32                     `protobuf:"varint,23,opt,name=uint32_app_privilege_flag,json=uint32AppPrivilegeFlag,proto3" json:"uint32_app_privilege_flag,omitempty"`
	Uint32AppPrivilegeMask     uint32                     `protobuf:"varint,24,opt,name=uint32_app_privilege_mask,json=uint32AppPrivilegeMask,proto3" json:"uint32_app_privilege_mask,omitempty"`
	StGroupExInfo              *A89GroupExInfoOnly        `protobuf:"bytes,25,opt,name=st_group_ex_info,json=stGroupExInfo,proto3" json:"st_group_ex_info,omitempty"`
	Uint32GroupSecLevel        uint32                     `protobuf:"varint,26,opt,name=uint32_group_sec_level,json=uint32GroupSecLevel,proto3" json:"uint32_group_sec_level,omitempty"`
	Uint32GroupSecLevelInfo    uint32                     `protobuf:"varint,27,opt,name=uint32_group_sec_level_info,json=uint32GroupSecLevelInfo,proto3" json:"uint32_group_sec_level_info,omitempty"`
	Uint64SubscriptionUin      uint64                     `protobuf:"varint,28,opt,name=uint64_subscription_uin,json=uint64SubscriptionUin,proto3" json:"uint64_subscription_uin,omitempty"`
	Uint32AllowMemberInvite    uint32                     `protobuf:"varint,29,opt,name=uint32_allow_member_invite,json=uint32AllowMemberInvite,proto3" json:"uint32_allow_member_invite,omitempty"`
	StringGroupQuestion        []byte                     `protobuf:"bytes,30,opt,name=string_group_question,json=stringGroupQuestion,proto3" json:"string_group_question,omitempty"`
	StringGroupAnswer          []byte                     `protobuf:"bytes,31,opt,name=string_group_answer,json=stringGroupAnswer,proto3" json:"string_group_answer,omitempty"`
	Uint32GroupFlagext3        uint32                     `protobuf:"varint,32,opt,name=uint32_group_flagext3,json=uint32GroupFlagext3,proto3" json:"uint32_group_flagext3,omitempty"`
	Uint32GroupFlagext3Mask    uint32                     `protobuf:"varint,33,opt,name=uint32_group_flagext3_mask,json=uint32GroupFlagext3Mask,proto3" json:"uint32_group_flagext3_mask,omitempty"`
	Uint32GroupOpenAppid       uint32                     `protobuf:"varint,34,opt,name=uint32_group_open_appid,json=uint32GroupOpenAppid,proto3" json:"uint32_group_open_appid,omitempty"`
	Uint32NoFingerOpenFlag     uint32                     `protobuf:"varint,35,opt,name=uint32_no_finger_open_flag,json=uint32NoFingerOpenFlag,proto3" json:"uint32_no_finger_open_flag,omitempty"`
	Uint32NoCodeFingerOpenFlag uint32                     `protobuf:"varint,36,opt,name=uint32_no_code_finger_open_flag,json=uint32NoCodeFingerOpenFlag,proto3" json:"uint32_no_code_finger_open_flag,omitempty"`
	Uint64RootId               uint64                     `protobuf:"varint,37,opt,name=uint64_root_id,json=uint64RootId,proto3" json:"uint64_root_id,omitempty"`
}

func (x *A89Groupinfo) Reset() {
	*x = A89Groupinfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oidb0x89a_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *A89Groupinfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*A89Groupinfo) ProtoMessage() {}

func (x *A89Groupinfo) ProtoReflect() protoreflect.Message {
	mi := &file_oidb0x89a_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use A89Groupinfo.ProtoReflect.Descriptor instead.
func (*A89Groupinfo) Descriptor() ([]byte, []int) {
	return file_oidb0x89a_proto_rawDescGZIP(), []int{3}
}

func (x *A89Groupinfo) GetUint32GroupExtAdmNum() uint32 {
	if x != nil {
		return x.Uint32GroupExtAdmNum
	}
	return 0
}

func (x *A89Groupinfo) GetUint32Flag() uint32 {
	if x != nil {
		return x.Uint32Flag
	}
	return 0
}

func (x *A89Groupinfo) GetStringGroupName() []byte {
	if x != nil {
		return x.StringGroupName
	}
	return nil
}

func (x *A89Groupinfo) GetStringGroupMemo() []byte {
	if x != nil {
		return x.StringGroupMemo
	}
	return nil
}

func (x *A89Groupinfo) GetStringGroupFingerMemo() []byte {
	if x != nil {
		return x.StringGroupFingerMemo
	}
	return nil
}

func (x *A89Groupinfo) GetStringGroupAioSkinUrl() []byte {
	if x != nil {
		return x.StringGroupAioSkinUrl
	}
	return nil
}

func (x *A89Groupinfo) GetStringGroupBoardSkinUrl() []byte {
	if x != nil {
		return x.StringGroupBoardSkinUrl
	}
	return nil
}

func (x *A89Groupinfo) GetStringGroupCoverSkinUrl() []byte {
	if x != nil {
		return x.StringGroupCoverSkinUrl
	}
	return nil
}

func (x *A89Groupinfo) GetUint32GroupGrade() uint32 {
	if x != nil {
		return x.Uint32GroupGrade
	}
	return 0
}

func (x *A89Groupinfo) GetUint32ActiveMemberNum() uint32 {
	if x != nil {
		return x.Uint32ActiveMemberNum
	}
	return 0
}

func (x *A89Groupinfo) GetUint32CertificationType() uint32 {
	if x != nil {
		return x.Uint32CertificationType
	}
	return 0
}

func (x *A89Groupinfo) GetStringCertificationText() []byte {
	if x != nil {
		return x.StringCertificationText
	}
	return nil
}

func (x *A89Groupinfo) GetStringGroupRichFingerMemo() []byte {
	if x != nil {
		return x.StringGroupRichFingerMemo
	}
	return nil
}

func (x *A89Groupinfo) GetStGroupNewguidelines() *A89GroupNewGuidelinesInfo {
	if x != nil {
		return x.StGroupNewguidelines
	}
	return nil
}

func (x *A89Groupinfo) GetUint32GroupFace() uint32 {
	if x != nil {
		return x.Uint32GroupFace
	}
	return 0
}

func (x *A89Groupinfo) GetUint32AddOption() uint32 {
	if x != nil {
		return x.Uint32AddOption
	}
	return 0
}

func (x *A89Groupinfo) GetUint32ShutupTime() uint32 {
	if x != nil {
		return x.Uint32ShutupTime
	}
	return 0
}

func (x *A89Groupinfo) GetUint32GroupTypeFlag() uint32 {
	if x != nil {
		return x.Uint32GroupTypeFlag
	}
	return 0
}

func (x *A89Groupinfo) GetRptStringGroupTag() [][]byte {
	if x != nil {
		return x.RptStringGroupTag
	}
	return nil
}

func (x *A89Groupinfo) GetMsgGroupGeoInfo() *A89GroupGeoInfo {
	if x != nil {
		return x.MsgGroupGeoInfo
	}
	return nil
}

func (x *A89Groupinfo) GetUint32GroupClassExt() uint32 {
	if x != nil {
		return x.Uint32GroupClassExt
	}
	return 0
}

func (x *A89Groupinfo) GetStringGroupClassText() []byte {
	if x != nil {
		return x.StringGroupClassText
	}
	return nil
}

func (x *A89Groupinfo) GetUint32AppPrivilegeFlag() uint32 {
	if x != nil {
		return x.Uint32AppPrivilegeFlag
	}
	return 0
}

func (x *A89Groupinfo) GetUint32AppPrivilegeMask() uint32 {
	if x != nil {
		return x.Uint32AppPrivilegeMask
	}
	return 0
}

func (x *A89Groupinfo) GetStGroupExInfo() *A89GroupExInfoOnly {
	if x != nil {
		return x.StGroupExInfo
	}
	return nil
}

func (x *A89Groupinfo) GetUint32GroupSecLevel() uint32 {
	if x != nil {
		return x.Uint32GroupSecLevel
	}
	return 0
}

func (x *A89Groupinfo) GetUint32GroupSecLevelInfo() uint32 {
	if x != nil {
		return x.Uint32GroupSecLevelInfo
	}
	return 0
}

func (x *A89Groupinfo) GetUint64SubscriptionUin() uint64 {
	if x != nil {
		return x.Uint64SubscriptionUin
	}
	return 0
}

func (x *A89Groupinfo) GetUint32AllowMemberInvite() uint32 {
	if x != nil {
		return x.Uint32AllowMemberInvite
	}
	return 0
}

func (x *A89Groupinfo) GetStringGroupQuestion() []byte {
	if x != nil {
		return x.StringGroupQuestion
	}
	return nil
}

func (x *A89Groupinfo) GetStringGroupAnswer() []byte {
	if x != nil {
		return x.StringGroupAnswer
	}
	return nil
}

func (x *A89Groupinfo) GetUint32GroupFlagext3() uint32 {
	if x != nil {
		return x.Uint32GroupFlagext3
	}
	return 0
}

func (x *A89Groupinfo) GetUint32GroupFlagext3Mask() uint32 {
	if x != nil {
		return x.Uint32GroupFlagext3Mask
	}
	return 0
}

func (x *A89Groupinfo) GetUint32GroupOpenAppid() uint32 {
	if x != nil {
		return x.Uint32GroupOpenAppid
	}
	return 0
}

func (x *A89Groupinfo) GetUint32NoFingerOpenFlag() uint32 {
	if x != nil {
		return x.Uint32NoFingerOpenFlag
	}
	return 0
}

func (x *A89Groupinfo) GetUint32NoCodeFingerOpenFlag() uint32 {
	if x != nil {
		return x.Uint32NoCodeFingerOpenFlag
	}
	return 0
}

func (x *A89Groupinfo) GetUint64RootId() uint64 {
	if x != nil {
		return x.Uint64RootId
	}
	return 0
}

type A89ReqBody struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uint64GroupCode           uint64        `protobuf:"varint,1,opt,name=uint64_group_code,json=uint64GroupCode,proto3" json:"uint64_group_code,omitempty"`
	StGroupInfo               *A89Groupinfo `protobuf:"bytes,2,opt,name=st_group_info,json=stGroupInfo,proto3" json:"st_group_info,omitempty"`
	Uint64OriginalOperatorUin uint64        `protobuf:"varint,3,opt,name=uint64_original_operator_uin,json=uint64OriginalOperatorUin,proto3" json:"uint64_original_operator_uin,omitempty"`
	Uint32ReqGroupOpenAppid   uint32        `protobuf:"varint,4,opt,name=uint32_req_group_open_appid,json=uint32ReqGroupOpenAppid,proto3" json:"uint32_req_group_open_appid,omitempty"`
}

func (x *A89ReqBody) Reset() {
	*x = A89ReqBody{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oidb0x89a_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *A89ReqBody) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*A89ReqBody) ProtoMessage() {}

func (x *A89ReqBody) ProtoReflect() protoreflect.Message {
	mi := &file_oidb0x89a_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use A89ReqBody.ProtoReflect.Descriptor instead.
func (*A89ReqBody) Descriptor() ([]byte, []int) {
	return file_oidb0x89a_proto_rawDescGZIP(), []int{4}
}

func (x *A89ReqBody) GetUint64GroupCode() uint64 {
	if x != nil {
		return x.Uint64GroupCode
	}
	return 0
}

func (x *A89ReqBody) GetStGroupInfo() *A89Groupinfo {
	if x != nil {
		return x.StGroupInfo
	}
	return nil
}

func (x *A89ReqBody) GetUint64OriginalOperatorUin() uint64 {
	if x != nil {
		return x.Uint64OriginalOperatorUin
	}
	return 0
}

func (x *A89ReqBody) GetUint32ReqGroupOpenAppid() uint32 {
	if x != nil {
		return x.Uint32ReqGroupOpenAppid
	}
	return 0
}

type A89RspBody struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uint64GroupCode uint64 `protobuf:"varint,1,opt,name=uint64_group_code,json=uint64GroupCode,proto3" json:"uint64_group_code,omitempty"`
	StrErrorinfo    []byte `protobuf:"bytes,2,opt,name=str_errorinfo,json=strErrorinfo,proto3" json:"str_errorinfo,omitempty"`
}

func (x *A89RspBody) Reset() {
	*x = A89RspBody{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oidb0x89a_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *A89RspBody) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*A89RspBody) ProtoMessage() {}

func (x *A89RspBody) ProtoReflect() protoreflect.Message {
	mi := &file_oidb0x89a_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use A89RspBody.ProtoReflect.Descriptor instead.
func (*A89RspBody) Descriptor() ([]byte, []int) {
	return file_oidb0x89a_proto_rawDescGZIP(), []int{5}
}

func (x *A89RspBody) GetUint64GroupCode() uint64 {
	if x != nil {
		return x.Uint64GroupCode
	}
	return 0
}

func (x *A89RspBody) GetStrErrorinfo() []byte {
	if x != nil {
		return x.StrErrorinfo
	}
	return nil
}

var File_oidb0x89a_proto protoreflect.FileDescriptor

var file_oidb0x89a_proto_rawDesc = []byte{
	0x0a, 0x0f, 0x6f, 0x69, 0x64, 0x62, 0x30, 0x78, 0x38, 0x39, 0x61, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x09, 0x6f, 0x69, 0x64, 0x62, 0x30, 0x78, 0x38, 0x39, 0x61, 0x22, 0x65, 0x0a, 0x19,
	0x41, 0x38, 0x39, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4e, 0x65, 0x77, 0x47, 0x75, 0x69, 0x64, 0x65,
	0x6c, 0x69, 0x6e, 0x65, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x21, 0x0a, 0x0c, 0x62, 0x6f, 0x6f,
	0x6c, 0x5f, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x0b, 0x62, 0x6f, 0x6f, 0x6c, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x12, 0x25, 0x0a, 0x0e,
	0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0c, 0x52, 0x0d, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x43, 0x6f, 0x6e, 0x74,
	0x65, 0x6e, 0x74, 0x22, 0xdf, 0x01, 0x0a, 0x0f, 0x41, 0x38, 0x39, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x47, 0x65, 0x6f, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x24, 0x0a, 0x0e, 0x75, 0x69, 0x6e, 0x74, 0x33,
	0x32, 0x5f, 0x63, 0x69, 0x74, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x0c, 0x75, 0x69, 0x6e, 0x74, 0x33, 0x32, 0x43, 0x69, 0x74, 0x79, 0x49, 0x64, 0x12, 0x2b, 0x0a,
	0x11, 0x75, 0x69, 0x6e, 0x74, 0x36, 0x34, 0x5f, 0x6c, 0x6f, 0x6e, 0x67, 0x74, 0x69, 0x74, 0x75,
	0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x10, 0x75, 0x69, 0x6e, 0x74, 0x36, 0x34,
	0x4c, 0x6f, 0x6e, 0x67, 0x74, 0x69, 0x74, 0x75, 0x64, 0x65, 0x12, 0x27, 0x0a, 0x0f, 0x75, 0x69,
	0x6e, 0x74, 0x36, 0x34, 0x5f, 0x6c, 0x61, 0x74, 0x69, 0x74, 0x75, 0x64, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x0e, 0x75, 0x69, 0x6e, 0x74, 0x36, 0x34, 0x4c, 0x61, 0x74, 0x69, 0x74,
	0x75, 0x64, 0x65, 0x12, 0x2c, 0x0a, 0x12, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x5f, 0x67, 0x65,
	0x6f, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0c, 0x52,
	0x10, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x47, 0x65, 0x6f, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e,
	0x74, 0x12, 0x22, 0x0a, 0x0d, 0x75, 0x69, 0x6e, 0x74, 0x36, 0x34, 0x5f, 0x70, 0x6f, 0x69, 0x5f,
	0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0b, 0x75, 0x69, 0x6e, 0x74, 0x36, 0x34,
	0x50, 0x6f, 0x69, 0x49, 0x64, 0x22, 0x78, 0x0a, 0x12, 0x41, 0x38, 0x39, 0x47, 0x72, 0x6f, 0x75,
	0x70, 0x45, 0x78, 0x49, 0x6e, 0x66, 0x6f, 0x4f, 0x6e, 0x6c, 0x79, 0x12, 0x26, 0x0a, 0x0f, 0x75,
	0x69, 0x6e, 0x74, 0x33, 0x32, 0x5f, 0x74, 0x72, 0x69, 0x62, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x0d, 0x75, 0x69, 0x6e, 0x74, 0x33, 0x32, 0x54, 0x72, 0x69, 0x62,
	0x65, 0x49, 0x64, 0x12, 0x3a, 0x0a, 0x1a, 0x75, 0x69, 0x6e, 0x74, 0x33, 0x32, 0x5f, 0x6d, 0x6f,
	0x6e, 0x65, 0x79, 0x5f, 0x66, 0x6f, 0x72, 0x5f, 0x61, 0x64, 0x64, 0x5f, 0x67, 0x72, 0x6f, 0x75,
	0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x16, 0x75, 0x69, 0x6e, 0x74, 0x33, 0x32, 0x4d,
	0x6f, 0x6e, 0x65, 0x79, 0x46, 0x6f, 0x72, 0x41, 0x64, 0x64, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x22,
	0xa5, 0x10, 0x0a, 0x0c, 0x41, 0x38, 0x39, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x69, 0x6e, 0x66, 0x6f,
	0x12, 0x36, 0x0a, 0x18, 0x75, 0x69, 0x6e, 0x74, 0x33, 0x32, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70,
	0x5f, 0x65, 0x78, 0x74, 0x5f, 0x61, 0x64, 0x6d, 0x5f, 0x6e, 0x75, 0x6d, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x14, 0x75, 0x69, 0x6e, 0x74, 0x33, 0x32, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x45,
	0x78, 0x74, 0x41, 0x64, 0x6d, 0x4e, 0x75, 0x6d, 0x12, 0x1f, 0x0a, 0x0b, 0x75, 0x69, 0x6e, 0x74,
	0x33, 0x32, 0x5f, 0x66, 0x6c, 0x61, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x75,
	0x69, 0x6e, 0x74, 0x33, 0x32, 0x46, 0x6c, 0x61, 0x67, 0x12, 0x2a, 0x0a, 0x11, 0x73, 0x74, 0x72,
	0x69, 0x6e, 0x67, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0c, 0x52, 0x0f, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x47, 0x72, 0x6f, 0x75,
	0x70, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x2a, 0x0a, 0x11, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x5f,
	0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x6d, 0x65, 0x6d, 0x6f, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0c,
	0x52, 0x0f, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x65, 0x6d,
	0x6f, 0x12, 0x37, 0x0a, 0x18, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x5f, 0x67, 0x72, 0x6f, 0x75,
	0x70, 0x5f, 0x66, 0x69, 0x6e, 0x67, 0x65, 0x72, 0x5f, 0x6d, 0x65, 0x6d, 0x6f, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x0c, 0x52, 0x15, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x46, 0x69, 0x6e, 0x67, 0x65, 0x72, 0x4d, 0x65, 0x6d, 0x6f, 0x12, 0x38, 0x0a, 0x19, 0x73, 0x74,
	0x72, 0x69, 0x6e, 0x67, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x61, 0x69, 0x6f, 0x5f, 0x73,
	0x6b, 0x69, 0x6e, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x15, 0x73,
	0x74, 0x72, 0x69, 0x6e, 0x67, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x41, 0x69, 0x6f, 0x53, 0x6b, 0x69,
	0x6e, 0x55, 0x72, 0x6c, 0x12, 0x3c, 0x0a, 0x1b, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x5f, 0x67,
	0x72, 0x6f, 0x75, 0x70, 0x5f, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x5f, 0x73, 0x6b, 0x69, 0x6e, 0x5f,
	0x75, 0x72, 0x6c, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x17, 0x73, 0x74, 0x72, 0x69, 0x6e,
	0x67, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x42, 0x6f, 0x61, 0x72, 0x64, 0x53, 0x6b, 0x69, 0x6e, 0x55,
	0x72, 0x6c, 0x12, 0x3c, 0x0a, 0x1b, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x5f, 0x67, 0x72, 0x6f,
	0x75, 0x70, 0x5f, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x5f, 0x73, 0x6b, 0x69, 0x6e, 0x5f, 0x75, 0x72,
	0x6c, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x17, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x47,
	0x72, 0x6f, 0x75, 0x70, 0x43, 0x6f, 0x76, 0x65, 0x72, 0x53, 0x6b, 0x69, 0x6e, 0x55, 0x72, 0x6c,
	0x12, 0x2c, 0x0a, 0x12, 0x75, 0x69, 0x6e, 0x74, 0x33, 0x32, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70,
	0x5f, 0x67, 0x72, 0x61, 0x64, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x10, 0x75, 0x69,
	0x6e, 0x74, 0x33, 0x32, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x47, 0x72, 0x61, 0x64, 0x65, 0x12, 0x37,
	0x0a, 0x18, 0x75, 0x69, 0x6e, 0x74, 0x33, 0x32, 0x5f, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x5f,
	0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x5f, 0x6e, 0x75, 0x6d, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x15, 0x75, 0x69, 0x6e, 0x74, 0x33, 0x32, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x4d, 0x65,
	0x6d, 0x62, 0x65, 0x72, 0x4e, 0x75, 0x6d, 0x12, 0x3a, 0x0a, 0x19, 0x75, 0x69, 0x6e, 0x74, 0x33,
	0x32, 0x5f, 0x63, 0x65, 0x72, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f,
	0x74, 0x79, 0x70, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x17, 0x75, 0x69, 0x6e, 0x74,
	0x33, 0x32, 0x43, 0x65, 0x72, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x3a, 0x0a, 0x19, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x5f, 0x63, 0x65,
	0x72, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x65, 0x78, 0x74,
	0x18, 0x0c, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x17, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x43, 0x65,
	0x72, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x65, 0x78, 0x74, 0x12,
	0x40, 0x0a, 0x1d, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f,
	0x72, 0x69, 0x63, 0x68, 0x5f, 0x66, 0x69, 0x6e, 0x67, 0x65, 0x72, 0x5f, 0x6d, 0x65, 0x6d, 0x6f,
	0x18, 0x0d, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x19, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x52, 0x69, 0x63, 0x68, 0x46, 0x69, 0x6e, 0x67, 0x65, 0x72, 0x4d, 0x65, 0x6d,
	0x6f, 0x12, 0x5a, 0x0a, 0x16, 0x73, 0x74, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x6e, 0x65,
	0x77, 0x67, 0x75, 0x69, 0x64, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x73, 0x18, 0x0e, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x24, 0x2e, 0x6f, 0x69, 0x64, 0x62, 0x30, 0x78, 0x38, 0x39, 0x61, 0x2e, 0x41, 0x38,
	0x39, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4e, 0x65, 0x77, 0x47, 0x75, 0x69, 0x64, 0x65, 0x6c, 0x69,
	0x6e, 0x65, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x14, 0x73, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x4e, 0x65, 0x77, 0x67, 0x75, 0x69, 0x64, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x73, 0x12, 0x2a, 0x0a,
	0x11, 0x75, 0x69, 0x6e, 0x74, 0x33, 0x32, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x66, 0x61,
	0x63, 0x65, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0f, 0x75, 0x69, 0x6e, 0x74, 0x33, 0x32,
	0x47, 0x72, 0x6f, 0x75, 0x70, 0x46, 0x61, 0x63, 0x65, 0x12, 0x2a, 0x0a, 0x11, 0x75, 0x69, 0x6e,
	0x74, 0x33, 0x32, 0x5f, 0x61, 0x64, 0x64, 0x5f, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x10,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x0f, 0x75, 0x69, 0x6e, 0x74, 0x33, 0x32, 0x41, 0x64, 0x64, 0x4f,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2c, 0x0a, 0x12, 0x75, 0x69, 0x6e, 0x74, 0x33, 0x32, 0x5f,
	0x73, 0x68, 0x75, 0x74, 0x75, 0x70, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x11, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x10, 0x75, 0x69, 0x6e, 0x74, 0x33, 0x32, 0x53, 0x68, 0x75, 0x74, 0x75, 0x70, 0x54,
	0x69, 0x6d, 0x65, 0x12, 0x33, 0x0a, 0x16, 0x75, 0x69, 0x6e, 0x74, 0x33, 0x32, 0x5f, 0x67, 0x72,
	0x6f, 0x75, 0x70, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x66, 0x6c, 0x61, 0x67, 0x18, 0x12, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x13, 0x75, 0x69, 0x6e, 0x74, 0x33, 0x32, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x54, 0x79, 0x70, 0x65, 0x46, 0x6c, 0x61, 0x67, 0x12, 0x2f, 0x0a, 0x14, 0x72, 0x70, 0x74, 0x5f,
	0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x74, 0x61, 0x67,
	0x18, 0x13, 0x20, 0x03, 0x28, 0x0c, 0x52, 0x11, 0x72, 0x70, 0x74, 0x53, 0x74, 0x72, 0x69, 0x6e,
	0x67, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x54, 0x61, 0x67, 0x12, 0x47, 0x0a, 0x12, 0x6d, 0x73, 0x67,
	0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x67, 0x65, 0x6f, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18,
	0x14, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x6f, 0x69, 0x64, 0x62, 0x30, 0x78, 0x38, 0x39,
	0x61, 0x2e, 0x41, 0x38, 0x39, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x47, 0x65, 0x6f, 0x49, 0x6e, 0x66,
	0x6f, 0x52, 0x0f, 0x6d, 0x73, 0x67, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x47, 0x65, 0x6f, 0x49, 0x6e,
	0x66, 0x6f, 0x12, 0x33, 0x0a, 0x16, 0x75, 0x69, 0x6e, 0x74, 0x33, 0x32, 0x5f, 0x67, 0x72, 0x6f,
	0x75, 0x70, 0x5f, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x5f, 0x65, 0x78, 0x74, 0x18, 0x15, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x13, 0x75, 0x69, 0x6e, 0x74, 0x33, 0x32, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x43,
	0x6c, 0x61, 0x73, 0x73, 0x45, 0x78, 0x74, 0x12, 0x35, 0x0a, 0x17, 0x73, 0x74, 0x72, 0x69, 0x6e,
	0x67, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x5f, 0x74, 0x65,
	0x78, 0x74, 0x18, 0x16, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x14, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67,
	0x47, 0x72, 0x6f, 0x75, 0x70, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x54, 0x65, 0x78, 0x74, 0x12, 0x39,
	0x0a, 0x19, 0x75, 0x69, 0x6e, 0x74, 0x33, 0x32, 0x5f, 0x61, 0x70, 0x70, 0x5f, 0x70, 0x72, 0x69,
	0x76, 0x69, 0x6c, 0x65, 0x67, 0x65, 0x5f, 0x66, 0x6c, 0x61, 0x67, 0x18, 0x17, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x16, 0x75, 0x69, 0x6e, 0x74, 0x33, 0x32, 0x41, 0x70, 0x70, 0x50, 0x72, 0x69, 0x76,
	0x69, 0x6c, 0x65, 0x67, 0x65, 0x46, 0x6c, 0x61, 0x67, 0x12, 0x39, 0x0a, 0x19, 0x75, 0x69, 0x6e,
	0x74, 0x33, 0x32, 0x5f, 0x61, 0x70, 0x70, 0x5f, 0x70, 0x72, 0x69, 0x76, 0x69, 0x6c, 0x65, 0x67,
	0x65, 0x5f, 0x6d, 0x61, 0x73, 0x6b, 0x18, 0x18, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x16, 0x75, 0x69,
	0x6e, 0x74, 0x33, 0x32, 0x41, 0x70, 0x70, 0x50, 0x72, 0x69, 0x76, 0x69, 0x6c, 0x65, 0x67, 0x65,
	0x4d, 0x61, 0x73, 0x6b, 0x12, 0x46, 0x0a, 0x10, 0x73, 0x74, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70,
	0x5f, 0x65, 0x78, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x19, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d,
	0x2e, 0x6f, 0x69, 0x64, 0x62, 0x30, 0x78, 0x38, 0x39, 0x61, 0x2e, 0x41, 0x38, 0x39, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x45, 0x78, 0x49, 0x6e, 0x66, 0x6f, 0x4f, 0x6e, 0x6c, 0x79, 0x52, 0x0d, 0x73,
	0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x45, 0x78, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x33, 0x0a, 0x16,
	0x75, 0x69, 0x6e, 0x74, 0x33, 0x32, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x73, 0x65, 0x63,
	0x5f, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x1a, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x13, 0x75, 0x69,
	0x6e, 0x74, 0x33, 0x32, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x53, 0x65, 0x63, 0x4c, 0x65, 0x76, 0x65,
	0x6c, 0x12, 0x3c, 0x0a, 0x1b, 0x75, 0x69, 0x6e, 0x74, 0x33, 0x32, 0x5f, 0x67, 0x72, 0x6f, 0x75,
	0x70, 0x5f, 0x73, 0x65, 0x63, 0x5f, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x5f, 0x69, 0x6e, 0x66, 0x6f,
	0x18, 0x1b, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x17, 0x75, 0x69, 0x6e, 0x74, 0x33, 0x32, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x53, 0x65, 0x63, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x12,
	0x36, 0x0a, 0x17, 0x75, 0x69, 0x6e, 0x74, 0x36, 0x34, 0x5f, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x75, 0x69, 0x6e, 0x18, 0x1c, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x15, 0x75, 0x69, 0x6e, 0x74, 0x36, 0x34, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x55, 0x69, 0x6e, 0x12, 0x3b, 0x0a, 0x1a, 0x75, 0x69, 0x6e, 0x74, 0x33,
	0x32, 0x5f, 0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x5f, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x5f, 0x69,
	0x6e, 0x76, 0x69, 0x74, 0x65, 0x18, 0x1d, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x17, 0x75, 0x69, 0x6e,
	0x74, 0x33, 0x32, 0x41, 0x6c, 0x6c, 0x6f, 0x77, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x6e,
	0x76, 0x69, 0x74, 0x65, 0x12, 0x32, 0x0a, 0x15, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x5f, 0x67,
	0x72, 0x6f, 0x75, 0x70, 0x5f, 0x71, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x1e, 0x20,
	0x01, 0x28, 0x0c, 0x52, 0x13, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x51, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2e, 0x0a, 0x13, 0x73, 0x74, 0x72, 0x69,
	0x6e, 0x67, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x61, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x18,
	0x1f, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x11, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x41, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x12, 0x32, 0x0a, 0x15, 0x75, 0x69, 0x6e, 0x74,
	0x33, 0x32, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x66, 0x6c, 0x61, 0x67, 0x65, 0x78, 0x74,
	0x33, 0x18, 0x20, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x13, 0x75, 0x69, 0x6e, 0x74, 0x33, 0x32, 0x47,
	0x72, 0x6f, 0x75, 0x70, 0x46, 0x6c, 0x61, 0x67, 0x65, 0x78, 0x74, 0x33, 0x12, 0x3b, 0x0a, 0x1a,
	0x75, 0x69, 0x6e, 0x74, 0x33, 0x32, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x66, 0x6c, 0x61,
	0x67, 0x65, 0x78, 0x74, 0x33, 0x5f, 0x6d, 0x61, 0x73, 0x6b, 0x18, 0x21, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x17, 0x75, 0x69, 0x6e, 0x74, 0x33, 0x32, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x46, 0x6c, 0x61,
	0x67, 0x65, 0x78, 0x74, 0x33, 0x4d, 0x61, 0x73, 0x6b, 0x12, 0x35, 0x0a, 0x17, 0x75, 0x69, 0x6e,
	0x74, 0x33, 0x32, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x6f, 0x70, 0x65, 0x6e, 0x5f, 0x61,
	0x70, 0x70, 0x69, 0x64, 0x18, 0x22, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x14, 0x75, 0x69, 0x6e, 0x74,
	0x33, 0x32, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4f, 0x70, 0x65, 0x6e, 0x41, 0x70, 0x70, 0x69, 0x64,
	0x12, 0x3a, 0x0a, 0x1a, 0x75, 0x69, 0x6e, 0x74, 0x33, 0x32, 0x5f, 0x6e, 0x6f, 0x5f, 0x66, 0x69,
	0x6e, 0x67, 0x65, 0x72, 0x5f, 0x6f, 0x70, 0x65, 0x6e, 0x5f, 0x66, 0x6c, 0x61, 0x67, 0x18, 0x23,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x16, 0x75, 0x69, 0x6e, 0x74, 0x33, 0x32, 0x4e, 0x6f, 0x46, 0x69,
	0x6e, 0x67, 0x65, 0x72, 0x4f, 0x70, 0x65, 0x6e, 0x46, 0x6c, 0x61, 0x67, 0x12, 0x43, 0x0a, 0x1f,
	0x75, 0x69, 0x6e, 0x74, 0x33, 0x32, 0x5f, 0x6e, 0x6f, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x5f, 0x66,
	0x69, 0x6e, 0x67, 0x65, 0x72, 0x5f, 0x6f, 0x70, 0x65, 0x6e, 0x5f, 0x66, 0x6c, 0x61, 0x67, 0x18,
	0x24, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x1a, 0x75, 0x69, 0x6e, 0x74, 0x33, 0x32, 0x4e, 0x6f, 0x43,
	0x6f, 0x64, 0x65, 0x46, 0x69, 0x6e, 0x67, 0x65, 0x72, 0x4f, 0x70, 0x65, 0x6e, 0x46, 0x6c, 0x61,
	0x67, 0x12, 0x24, 0x0a, 0x0e, 0x75, 0x69, 0x6e, 0x74, 0x36, 0x34, 0x5f, 0x72, 0x6f, 0x6f, 0x74,
	0x5f, 0x69, 0x64, 0x18, 0x25, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0c, 0x75, 0x69, 0x6e, 0x74, 0x36,
	0x34, 0x52, 0x6f, 0x6f, 0x74, 0x49, 0x64, 0x22, 0xf4, 0x01, 0x0a, 0x0a, 0x41, 0x38, 0x39, 0x52,
	0x65, 0x71, 0x42, 0x6f, 0x64, 0x79, 0x12, 0x2a, 0x0a, 0x11, 0x75, 0x69, 0x6e, 0x74, 0x36, 0x34,
	0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x0f, 0x75, 0x69, 0x6e, 0x74, 0x36, 0x34, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x43, 0x6f,
	0x64, 0x65, 0x12, 0x3b, 0x0a, 0x0d, 0x73, 0x74, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x69,
	0x6e, 0x66, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x6f, 0x69, 0x64, 0x62,
	0x30, 0x78, 0x38, 0x39, 0x61, 0x2e, 0x41, 0x38, 0x39, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x69, 0x6e,
	0x66, 0x6f, 0x52, 0x0b, 0x73, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x12,
	0x3f, 0x0a, 0x1c, 0x75, 0x69, 0x6e, 0x74, 0x36, 0x34, 0x5f, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e,
	0x61, 0x6c, 0x5f, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x5f, 0x75, 0x69, 0x6e, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x19, 0x75, 0x69, 0x6e, 0x74, 0x36, 0x34, 0x4f, 0x72, 0x69,
	0x67, 0x69, 0x6e, 0x61, 0x6c, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x55, 0x69, 0x6e,
	0x12, 0x3c, 0x0a, 0x1b, 0x75, 0x69, 0x6e, 0x74, 0x33, 0x32, 0x5f, 0x72, 0x65, 0x71, 0x5f, 0x67,
	0x72, 0x6f, 0x75, 0x70, 0x5f, 0x6f, 0x70, 0x65, 0x6e, 0x5f, 0x61, 0x70, 0x70, 0x69, 0x64, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x17, 0x75, 0x69, 0x6e, 0x74, 0x33, 0x32, 0x52, 0x65, 0x71,
	0x47, 0x72, 0x6f, 0x75, 0x70, 0x4f, 0x70, 0x65, 0x6e, 0x41, 0x70, 0x70, 0x69, 0x64, 0x22, 0x5d,
	0x0a, 0x0a, 0x41, 0x38, 0x39, 0x52, 0x73, 0x70, 0x42, 0x6f, 0x64, 0x79, 0x12, 0x2a, 0x0a, 0x11,
	0x75, 0x69, 0x6e, 0x74, 0x36, 0x34, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x63, 0x6f, 0x64,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0f, 0x75, 0x69, 0x6e, 0x74, 0x36, 0x34, 0x47,
	0x72, 0x6f, 0x75, 0x70, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x73, 0x74, 0x72, 0x5f,
	0x65, 0x72, 0x72, 0x6f, 0x72, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52,
	0x0c, 0x73, 0x74, 0x72, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x69, 0x6e, 0x66, 0x6f, 0x42, 0x08, 0x5a,
	0x06, 0x2e, 0x3b, 0x6f, 0x69, 0x64, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_oidb0x89a_proto_rawDescOnce sync.Once
	file_oidb0x89a_proto_rawDescData = file_oidb0x89a_proto_rawDesc
)

func file_oidb0x89a_proto_rawDescGZIP() []byte {
	file_oidb0x89a_proto_rawDescOnce.Do(func() {
		file_oidb0x89a_proto_rawDescData = protoimpl.X.CompressGZIP(file_oidb0x89a_proto_rawDescData)
	})
	return file_oidb0x89a_proto_rawDescData
}

var file_oidb0x89a_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_oidb0x89a_proto_goTypes = []interface{}{
	(*A89GroupNewGuidelinesInfo)(nil), // 0: oidb0x89a.A89GroupNewGuidelinesInfo
	(*A89GroupGeoInfo)(nil),           // 1: oidb0x89a.A89GroupGeoInfo
	(*A89GroupExInfoOnly)(nil),        // 2: oidb0x89a.A89GroupExInfoOnly
	(*A89Groupinfo)(nil),              // 3: oidb0x89a.A89Groupinfo
	(*A89ReqBody)(nil),                // 4: oidb0x89a.A89ReqBody
	(*A89RspBody)(nil),                // 5: oidb0x89a.A89RspBody
}
var file_oidb0x89a_proto_depIdxs = []int32{
	0, // 0: oidb0x89a.A89Groupinfo.st_group_newguidelines:type_name -> oidb0x89a.A89GroupNewGuidelinesInfo
	1, // 1: oidb0x89a.A89Groupinfo.msg_group_geo_info:type_name -> oidb0x89a.A89GroupGeoInfo
	2, // 2: oidb0x89a.A89Groupinfo.st_group_ex_info:type_name -> oidb0x89a.A89GroupExInfoOnly
	3, // 3: oidb0x89a.A89ReqBody.st_group_info:type_name -> oidb0x89a.A89Groupinfo
	4, // [4:4] is the sub-list for method output_type
	4, // [4:4] is the sub-list for method input_type
	4, // [4:4] is the sub-list for extension type_name
	4, // [4:4] is the sub-list for extension extendee
	0, // [0:4] is the sub-list for field type_name
}

func init() { file_oidb0x89a_proto_init() }
func file_oidb0x89a_proto_init() {
	if File_oidb0x89a_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_oidb0x89a_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*A89GroupNewGuidelinesInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oidb0x89a_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*A89GroupGeoInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oidb0x89a_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*A89GroupExInfoOnly); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oidb0x89a_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*A89Groupinfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oidb0x89a_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*A89ReqBody); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oidb0x89a_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*A89RspBody); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_oidb0x89a_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_oidb0x89a_proto_goTypes,
		DependencyIndexes: file_oidb0x89a_proto_depIdxs,
		MessageInfos:      file_oidb0x89a_proto_msgTypes,
	}.Build()
	File_oidb0x89a_proto = out.File
	file_oidb0x89a_proto_rawDesc = nil
	file_oidb0x89a_proto_goTypes = nil
	file_oidb0x89a_proto_depIdxs = nil
}
